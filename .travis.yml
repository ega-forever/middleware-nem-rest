sudo: required
dist: trusty
os: linux
group: stable
language: node_js
node_js: 7.6.0

services:
  - mongodb
  - rabbitmq

before_install:
  - mongo data --eval 'db.dropDatabase();'
  - sudo apt-get update
  - sudo apt-get install python2.7 git-all pkg-config libncurses5-dev libssl-dev libnss3-dev libexpat-dev libc6-dev -y

install:
  - sudo rabbitmq-plugins enable rabbitmq_web_stomp
  - npm install
  - npm install -g pm2

before_script:
    - echo NIS=http://192.3.61.243:7890 > .env
    - echo WEBSOCKET_NIS=http://192.3.61.243:7778 >> .env
    - echo USE_MONGO_DATA=1 >> .env
    - cd $TRAVIS_BUILD_DIR && pm2 start index.js


script:
  - sleep 30 && npm test -- --coverage

after_script:
  - pm2 logs --nostream
  - pm2 kill && pkill PM2

after_success:
  - FULL_GCR_KEY="-----BEGIN PRIVATE KEY-----\n"$GCR_KEY"\n-----END PRIVATE KEY-----\n"
  - sed -i -e "s%\PWD%$FULL_GCR_KEY%g" gcregistry.json
  - docker login -u _json_key -p "$(cat gcregistry.json)" https://gcr.io
  - rm -rf gcregistry.json
  - |
    if [ "$TRAVIS_TAG" == "" ]; then
      IMAGE_TAG_NAME="latest"
    elif [ "$TRAVIS_TAG" != "" ]; then
      IMAGE_TAG_NAME="develop"
    fi;
  - IMAGE_TAG_NAME="latest"
  - |
    if [ "$TRAVIS_BRANCH" == "master" ]; then
      docker build --quiet -t gcr.io/deep-wares-144610/$TRAVIS_BRANCH/middleware-nem:$IMAGE_TAG_NAME --build-arg RELEASE=latest .
      docker push gcr.io/deep-wares-144610/$TRAVIS_BRANCH/middleware-nem:$IMAGE_TAG_NAME
    elif [ "$TRAVIS_BRANCH" == "develop" ]; then
      docker build --quiet -t gcr.io/deep-wares-144610/$TRAVIS_BRANCH/middleware-nem:$IMAGE_TAG_NAME --build-arg RELEASE=develop .
      docker push gcr.io/deep-wares-144610/$TRAVIS_BRANCH/middleware-nem:$IMAGE_TAG_NAME
    fi;

notifications:
  email: false

cache:
  directories:
    - node_modules